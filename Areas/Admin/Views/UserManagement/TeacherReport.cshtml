@model IPagedList<InClassVoting.Models.Teacher>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "TeacherReport";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/Content/PagedList.css">

<!-- start sidebar -->
<div id="sideBar" class="relative flex flex-col flex-wrap bg-white border-r border-gray-300 p-6 flex-none w-64 md:-ml-64 md:fixed md:top-0 md:z-30 md:h-screen md:shadow-xl animated faster">


    <!-- sidebar content -->
    <div class="flex flex-col">

        <!-- sidebar toggle -->
        <div class="text-right hidden md:block mb-4">
            <button id="sideBarHideBtn">
                <i class="fad fa-times-circle"></i>
            </button>
        </div>
        <!-- end sidebar toggle -->
        <h1 class="mb-3 capitalize font-medium text-sm hover:text-teal-600 transition ease-in-out duration-500" style="margin-bottom:10px">
            <i class="fas fa-user"></i>
            <strong style="font-size:18px;margin-left:5px;margin-top:10px">User </strong>
        </h1>
        <!-- end link -->

        <div class="layout-content">

            <!-- end link -->
            <div class="layout-content">
                <a href="~/Admin/UserManagement/TeacherReport" style="margin-top: 10px;margin-left: 20px; color: rebeccapurple; font-size: 16px" class="mb-4 capitalize font-medium text-sm hover:text-teal-600 transition ease-in-out duration-500">
                    <b> Teacher (@ViewBag.CountTotalTeacher)</b>
                </a>

                <a href="~/Admin/UserManagement/StudentReport" style="margin-left: 20px; font-size: 16px" class="mb-4 capitalize font-medium text-sm hover:text-teal-600 transition ease-in-out duration-500">
                    Student (@ViewBag.CountTotalStudent)
                </a>

            </div>


        </div>

    </div>
    <!-- end sidebar content -->

</div>
<!-- end sidbar -->


<div class="bg-gray-100 flex-1 p-6 md:mt-16">
    <!-- start navbar -->
    <div style="height: 40px; border-bottom: solid 0.5px;margin-bottom:10px">
        <div style="display: flex; height: 40px;">
            <h1 class="h5 mg-top">Teacher management</h1>
            <!-- Example single danger button -->
        </div>
    </div>
    @if (ViewBag.CountTeacher == 0)
    {

        <p style="text-align: center; margin-top: 10%; font-size: larger;">There is no teacher in the system</p>
    }
    else
    {
        using (Html.BeginForm("TeacherReport", "UserManagement", FormMethod.Get))
        {
            <div class="block-search-dropdown">

                <div class="search-size text-gray-600 md:w-full md:flex md:flex-row md:justify-evenly md:pb-10 md:mb-10 md:border-b md:border-gray-200">
                    <div class="w-full">
                        <span class="h5">Search: </span> <input class="search-box flex-1 w-8/12" type="text" placeholder="..." id="searchText" name="searchText" value="@ViewBag.Search">

                        <button type="submit" class="search-box"> <i class="fad fa-search"></i> </button>
                    </div>
                </div>
            </div>
        }
        <div class="tb-mg-top">
            <input type="hidden" name="searchText" value="@ViewBag.Search" />
            <div id="divShowQuestions">
                @if (Model.Count() == 0)
                {
                    <p style="text-align: center; margin-top: 10%; font-size: larger;">0 teacher found...</p> }
                else
                {
                    <table class="table w-full">
                        <thead>
                            <tr>
                                <th class="" scope="col">No</th>
                                <th class="w-2/10" scope="col">Account</th>
                                <th class="w-2/10" scope="col">Name</th>
                                <th class="w-2/10" scope="col">Question created</th>
                                <th class="w-2/10" scope="col">Quiz created</th>
                                <th class="w-2/10" scope="col">Poll created</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var countQuestionValuePair = ViewBag.Questions as Dictionary<int, int>;
                                var countQuizValuePair = ViewBag.Quizzes as Dictionary<int, int>;
                                var countPollValuePair = ViewBag.Polls as Dictionary<int, int>;
                            }
                            @foreach (var teacher in Model)
                            {
                                ViewBag.TeacherCount = ViewBag.TeacherCount + 1;
                                <tr>
                                    <th scope="row">@ViewBag.TeacherCount </th>
                                    <td class="w-2/10">@teacher.Email</td>
                                    <td class="w-2/10">@teacher.Name</td>
                                    @{
                                        int countQuestion = 0;
                                        int countPoll = 0;
                                        int countQuiz = 0;
                                    }
                                    @{
                                        foreach (var questionPair in countQuestionValuePair)
                                        {
                                            if (questionPair.Key == teacher.TID)
                                            {
                                                countQuestion = questionPair.Value;
                                            }
                                        }
                                        foreach (var quizPair in countQuizValuePair)
                                        {
                                            if (quizPair.Key == teacher.TID)
                                            {
                                                countQuiz = quizPair.Value;
                                            }
                                        }
                                        foreach (var pollPair in countPollValuePair)
                                        {
                                            if (pollPair.Key == teacher.TID)
                                            {
                                                countPoll = pollPair.Value;
                                            }
                                        }
                                    }
                                        <td class="w-2/10"> @countQuestion</td>
                                        <td class="w-2/10"> @countQuiz </td>
                                        <td class="w-2/10"> @countPoll </td>
                                    </tr>
                                    }


                                </tbody>
                            </table>

                            <div class="paging">
                                @Html.PagedListPager(Model, i => Url.Action("TeacherReport", "UserManagement",
                                                new { i, searchText = Request.QueryString["searchText"] }))
                            </div>
                        }
                        </div>

                    </div>
                }
            </div>